{
  "posts": [
    {
      "id": "1fca2a8b-c207-4f5b-b5c1-27360e9c4cad",
      "title": "JavaScript 변수 선언하기",
      "content": "var, let, const의 차이점을 배웠다.\nvar는 함수 단위 스코프를 가지며, let과 const는 블록 단위 스코프이다.",
      "createdAt": "2024-03-01T09:30:00+09:00",
      "tags": ["변수", "스코프"]
    },
    {
      "id": "4f2b5d74-e4cc-4e3f-a2b5-60b8d4b99188",
      "title": "화살표 함수 이해하기",
      "content": "ES6에서 도입된 화살표 함수에 대해서 배웠다.\n간결한 문법이 특징.",
      "createdAt": "2024-03-02T10:00:00+09:00",
      "tags": ["ES6", "함수"]
    },
    {
      "id": "7d59aff0-222b-4672-8c4d-3c03a69f9e0f",
      "title": "프로미스의 기본",
      "content": "비동기 처리를 위한 프로미스 사용법과 예제를 실습해 보았다.\n프로미스 체이닝에 대해서도 배움.",
      "createdAt": "2024-03-03T11:15:00+09:00",
      "tags": ["비동기", "프로미스"]
    },
    {
      "id": "81bc2773-b3a2-4741-961a-e1b736dadb3c",
      "title": "비동기 처리와 async/await",
      "content": "비동기 처리 패턴 중 하나인 async/await에 대해 공부했다.\n비동기 코드를 동기 코드처럼 작성 가능.",
      "createdAt": "2024-03-04T12:20:00+09:00",
      "tags": ["비동기", "async", "await"]
    },
    {
      "id": "47ef2c7f-e214-42e7-a4d7-c8e33ee4d0c4",
      "title": "DOM 조작하기",
      "content": "자바스크립트를 사용하여 HTML 문서의 DOM을 조작하는 방법을 배웠다.\n요소 선택, 수정 방법 등.",
      "createdAt": "2024-03-05T13:30:00+09:00",
      "tags": ["DOM", "HTML"]
    },
    {
      "id": "87e4d5ab-beac-46d7-a7ae-e9cacd2c4a29",
      "title": "이벤트 핸들링 이해하기",
      "content": "자바스크립트를 이용해 DOM 요소에 이벤트를 추가하는 방법을 배웠다.\naddEventListener 활용 방법 등.",
      "createdAt": "2024-03-06T14:45:00+09:00",
      "tags": ["이벤트", "DOM"]
    },
    {
      "id": "c6e1d14e-8819-4abc-a1a5-20b4b0d1cc3e",
      "title": "프로토타입 기반 상속",
      "content": "자바스크립트의 프로토타입 기반 상속에 대해 배웠다.\n객체의 원형을 이용해 새로운 객체를 생성하는 방식.",
      "createdAt": "2024-03-07T15:50:00+09:00",
      "tags": ["프로토타입", "상속"]
    },
    {
      "id": "ff47c5ef-2c96-4f59-8aee-a749c8fb8a76",
      "title": "모던 자바스크립트 개요",
      "content": "모던 자바스크립트의 개념과 최신 특성들에 대해 공부했다.\nES6 이후의 새로운 기능들이 중점.",
      "createdAt": "2024-03-08T16:55:00+09:00",
      "tags": ["ES6+", "모던자바스크립트"]
    },
    {
      "id": "9cac627b-4aac-43c4-998e-0ebb34d7c0ea",
      "title": "콜백 함수 깊게 이해하기",
      "content": "콜백 함수의 작동 원리와 사용법을 배웠다.\n비동기 처리에서 콜백 함수의 중요성을 이해함.",
      "createdAt": "2024-03-09T09:05:00+09:00",
      "tags": ["콜백", "함수"]
    },
    {
      "id": "2626e675-55db-4c20-8f85-12472d1b2cad",
      "title": "클로저와 그 활용법",
      "content": "함수가 선언된 실행 컨텍스트를 기억하는 클로저 개념을 배웠다.\n클로저를 활용한 예제를 통해 학습.",
      "createdAt": "2024-03-10T10:10:00+09:00",
      "tags": ["클로저", "함수"]
    },
    {
      "id": "dff9b7f9-bec7-45c7-a67d-eccd2a1785cf",
      "title": "자바스크립트의 this 키워드",
      "content": "this의 다양한 사용 상황과 그에 따른 this의 값이 어떻게 결정되는지를 배웠다.",
      "createdAt": "2024-03-11T11:15:00+09:00",
      "tags": ["this", "함수"]
    },
    {
      "id": "f77af467-a2fe-437d-9c2e-5b23df5a3a49",
      "title": "JSON 데이터 처리 기초",
      "content": "JSON 형식의 데이터를 처리하는 방법에 대해 배웠다.\nparse와 stringify의 사용법을 중점적으로.",
      "createdAt": "2024-03-12T12:20:00+09:00",
      "tags": ["JSON", "데이터 처리"]
    },
    {
      "id": "e8bf8e85-a4f4-4421-85db-967b4a81ce31",
      "title": "ES6 클래스와 객체 생성하기",
      "content": "ES6부터 도입된 클래스 문법을 통해 객체를 생성하는 방법을 배웠다.\n구조와 상속 처리 기법에 대해 학습.",
      "createdAt": "2024-03-13T13:25:00+09:00",
      "tags": ["ES6", "클래스", "객체"]
    },
    {
      "id": "6c1184c2-dd5b-49f1-b8aa-85d5d0623f11",
      "title": "모듈 시스템과 임포트/익스포트",
      "content": "자바스크립트 모듈 시스템의 기본과 ES6의 import/export 문법에 대해 배웠다.\n모듈화의 이점을 학습.",
      "createdAt": "2024-03-14T14:30:00+09:00",
      "tags": ["모듈", "ES6"]
    },
    {
      "id": "815497b4-6cd7-496d-a2ee-8c693a345524",
      "title": "웹 스토리지 활용하기",
      "content": "로컬 스토리지와 세션 스토리지의 차이점 및 사용법을 배웠다.\n웹 애플리케이션에서의 데이터 저장 방법.",
      "createdAt": "2024-03-15T15:35:00+09:00",
      "tags": ["웹 스토리지", "데이터 저장"]
    },
    {
      "id": "97d24e53-e728-4b8d-9723-d163e3ecd1fb",
      "title": "이벤트 루프와 자바스크립트의 비동기 처리",
      "content": "자바스크립트의 이벤트 루프 메커니즘과 함께 비동기 처리 방법들에 대해 깊게 배웠다.\n콜백, 프로미스, async/await 등.",
      "createdAt": "2024-03-16T16:40:00+09:00",
      "tags": ["이벤트 루프", "비동기 처리"]
    }
  ]
}
